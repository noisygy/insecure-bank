# example workflow for Coverity thin client with CNC scan farm
name: cnc-thin-client

on:
  push:
    branches: [ main, master, stage, release ]
  pull_request:
    branches: [ main, master, stage, release ]
  workflow_dispatch:

jobs:
  coverity:
    runs-on: ubuntu-latest
    env:
      COVERITY_URL: ${{ vars.COVERITY_URL }}
      COV_USER: ${{ secrets.COVERITY_USER }}
      COVERITY_PASSPHRASE: ${{ secrets.COVERITY_PASSPHRASE }}
      COVERITY_THIN_CLIENT: cov_thin_client-linux64-2023.3.0.tar.gz   # see ER CNC-861 to support version=latest
      COVERITY_PROJECT: ${{ github.event.repository.name }}
      COVERITY_STREAM: ${{ github.event.repository.name }}-${{ github.ref_name }}
    steps:
    - name: Checkout Source
      uses: actions/checkout@v3
    - name: Setup Java JDK
      uses: actions/setup-java@v3
      with:
        java-version: 11
        distribution: microsoft
        cache: maven
    - name: Coverity Full Scan
      if: ${{ github.event_name != 'pull_request' }}
      run: |
        curl -fLsS $COVERITY_URL/api/v2/scans/downloads/$COVERITY_THIN_CLIENT | tar -C $RUNNER_TEMP -xzf -
        $RUNNER_TEMP/bin/coverity scan -o analyze.location=connect -o commit.connect.url=$COVERITY_URL -o commit.connect.stream=$COVERITY_STREAM
    - name: Coverity Quality Gate
      if: ${{ github.event_name != 'pull_request' }}
      run: |
        curl -fLsS --user $COV_USER:$COVERITY_PASSPHRASE $COVERITY_URL/api/viewContents/issues/v1/Outstanding%20Issues?projectId=$COVERITY_PROJECT > results.json
        if [ $(cat results.json | jq .viewContentsV1.totalRows) -ne 0 ]; then echo "Outstanding Issues Detected"; cat results.json | jq .viewContentsV1.rows; exit 1; fi
    - id: changeset
      name: Get Pull Request Changeset
      uses: jitterbit/get-changed-files@v1
      if: ${{ github.event_name == 'pull_request' }}
    - name: Coverity PR Scan
      if: ${{ github.event_name == 'pull_request' && steps.changeset.outputs.added_modified != '' }}
      run: |
        curl -fLsS $COVERITY_URL/api/v2/scans/downloads/$COVERITY_THIN_CLIENT | tar -C $RUNNER_TEMP -xzf -
        $RUNNER_TEMP/bin/coverity scan -o analyze.location=connect -o commit.connect.url=$COVERITY_URL -o commit.connect.stream=$COVERITY_PROJECT-$GITHUB_BASE_REF \
            -o commit.connect.comparison-report=comparison-report.json
        cat comparison-report.json | jq '.issues[] | select(.presentInReferenceSnapshot == false and (.impact == "Medium" or .impact == "High"))' > new-issues.json
        if [ -s new-issues.json ]; then echo "New Issues Detected"; cat new-issues.json | jq; exit 1; fi
